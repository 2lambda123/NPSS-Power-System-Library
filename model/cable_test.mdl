//-------------------------------------------------------------------------------------------------
//
//   File Name:     cable_test.mdl
//   Date(s):       February 1, 2019
//   Author:        Jeffrey Csank, David Sadey, Tom Lavelle
//					NASA Glenn Research Center
//
//   Description:   Run the cable element on- and off-design.
//
//-------------------------------------------------------------------------------------------------


class Source extends Element{
  ElectricOutputPort EP_O;
  ElectricInputPort EP_I;
}

real defaultFrequency = 400.;

Source ACS{
  void postexecute(){
    EP_O.setIVRMS( 0, 0., 10., 0.);
    EP_I1.setIVRMS( 0, 0., 0, 0. );
    EP_I2.setIVRMS( 0, 0., 0, 0. );
  }
}
Element Cable ACCable {
	length=28.3464; 	
	//R=4.3245e-6;
	R=.010763 * length * 3.28 / 1000.; //3.28 converts length in m to length in ft.  Overall units are ohms
	L=.0000796 * (length * 3.28)/60./2./PI / 1000.; //3.28 converts length in m to length in ft. Overall units are H.
}
ACS.EP_O.setOption("ElectricPowerType","AC3");
ACS.EP_I.setOption("ElectricPowerType","AC3");
ACCable.EP_O.setOption("ElectricPowerType","AC3");
ACCable.EP_I.setOption("ElectricPowerType","AC3");


Source DCS{
  void postexecute(){
    EP_O.setIVRMS( 0, 0., 10., 0.);
    EP_I1.setIVRMS( 0, 0., 0, 0. );
    EP_I2.setIVRMS( 0, 0., 0, 0. );
  }
}
Element Cable DCCable {
	length=28.3464; 	
	//R=4.3245e-6;
	R=.010763 * length * 3.28 / 1000.; //3.28 converts length in m to length in ft.  Overall units are ohms
	L=.0000796 * (length * 3.28)/60./2./PI / 1000.; //3.28 converts length in m to length in ft. Overall units are H.
}
DCS.EP_O.setOption("ElectricPowerType","DC");
DCS.EP_I.setOption("ElectricPowerType","DC");
DCCable.EP_O.setOption("ElectricPowerType","DC");
DCCable.EP_I.setOption("ElectricPowerType","DC");

//--------------------------------------------------------
// link it up
//--------------------------------------------------------


linkEports( "ACS.EP_O", "ACCable.EP_I", "PORT" );
linkEports( "ACCable.EP_O", "ACS.EP_O", "NODE" );
linkEports( "DCS.EP_O", "DCCable.EP_I", "PORT" );
linkEports( "DCCable.EP_O", "DCS.EP_O", "NODE" );

