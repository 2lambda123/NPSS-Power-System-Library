/***
 -------------------------------------------------------------------------------
 |                                                                             |
 | NASA Glenn Research Center                                                  |
 | 21000 Brookpark Rd 		                                                     |
 | Cleveland, OH 44135 	                                                       |
 |                                                                             |
 | File Name:     baseline_TMS.mdl                                             |
 | Author(s):	    George Thomas                                 			         |
 | Date(s):       December 2019                                                |
 |                                                                             |
 | Description:   Baseline thermal management system model.                    |
 |                                                                             |
 -------------------------------------------------------------------------------
***/

setThermoPackage("FPT");

#include "ThermalDuct.int"
#include "ThermalLoad.int"
#include "ThermalTank.int"

Independent ind_Tbal{
  varName = "fs_coolant.Tt";
}

Dependent dep_Tbal{
  eq_lhs = "fs_coolant.Fl_O.Tt";
  eq_rhs = "fe_coolant.Fl_I.Tt";
}

Element FlowStart fs_air{
 Fl_O.comp = "CEAT";
 Tt = 518.0;
 Pt = 14.504;
 W = 5.0;
}

Element FlowStart fs_coolant{
 Fl_O.comp = "H2O";
 Tt = 550.0;
 Pt = 14.504;
 W = 10.5;
}

Element ThermalDuct generator_cooler{
  dPqP_dmd = 0.01;
  eff = 0.8;
}
#ifdef POWER_ELECTRONICS
  Element ThermalDuct rectifier_cooler{
    dPqP_dmd = 0.01;
    eff = 0.8;
  }
  Element ThermalDuct inverter_cooler{
    dPqP_dmd = 0.01;
    eff = 0.8;
  }
#endif
Element ThermalDuct motor_cooler{
  dPqP_dmd = 0.01;
  eff = 0.8;
}


Element ThermalTank volume{
  switchMass = "INPUT";
  W_out = 0.4;
  dPqP_dmd = 0.01;
  T_mass = 518;
  mass = 0.5;
}


Element HeatExchanger HEX{
  switchQcalc = "EFFECT";
  effect = 0.8;
}

Element FlowEnd fe_air{
  void postexecute(){
    //cerr << "comp is " << Fl_I.comp << endl;
  }
}

Element FlowEnd fe_coolant{
  void postexecute(){
    //cerr << "comp is " << Fl_I.comp << endl;
  }
}
#ifdef POWER_ELECTRONICS
  linkPorts("fs_coolant.Fl_O","generator_cooler.Fl_I", "FC1");
  linkPorts("generator_cooler.Fl_O","rectifier_cooler.Fl_I", "FC2");
  linkPorts("rectifier_cooler.Fl_O","inverter_cooler.Fl_I", "FC3");
  linkPorts("inverter_cooler.Fl_O","motor_cooler.Fl_I", "FC4");
  linkPorts("motor_cooler.Fl_O","volume.Fl_I", "FC5");
  linkPorts("volume.Fl_O","HEX.Fl_I1", "FC6");
  linkPorts("HEX.Fl_O1","fe_coolant.Fl_I", "FC7");
#else
  linkPorts("fs_coolant.Fl_O","generator_cooler.Fl_I", "FC1");
  linkPorts("generator_cooler.Fl_O","motor_cooler.Fl_I", "FC4");
  linkPorts("motor_cooler.Fl_O","volume.Fl_I", "FC5");
  linkPorts("volume.Fl_O","HEX.Fl_I1", "FC6");
  linkPorts("HEX.Fl_O1","fe_coolant.Fl_I", "FC7");
#endif

linkPorts("fs_air.Fl_O","HEX.Fl_I2", "FC11");
linkPorts("HEX.Fl_O2","fe_air.Fl_I", "FC12");