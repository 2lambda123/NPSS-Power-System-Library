/***
 -------------------------------------------------------------------------------
 |                                                                             |
 | NASA Glenn Research Center                                                  |
 | 21000 Brookpark Rd                                                          |
 | Cleveland, OH 44135                                                         |
 |                                                                             |
 | File Name:     Resistor.int                                                 |
 | Author(s):     Jeffrey Csank, David Sadey, Tom Lavelle                      |
 | Date(s):       April 2018                                                   |
 |                                                                             |
 -------------------------------------------------------------------------------
***/

#ifndef __RESISTOR__
#define __RESISTOR__

class Resistor extends Element {
  
  //----------------------------
  // ****** DOCUMENTATION ******
  //----------------------------
  
  // title = "";
  description = "The " + isA() + "";
  // usageNotes = isA() + "- NOTE TO USERS: This file....";
  // background = "";
  
  //------------------------------
  // ****** SETUP VARIABLES ******
  //------------------------------
  
  real R;
  ComplexNumber dV;
  ComplexNumber Z;
  ComplexNumber I;

  //----------------------------------------------------------
  // ****** SETUP PORTS, FLOW STATIONS, SOCKETS, TABLES ******
  //----------------------------------------------------------  

  /* ELECTRICAL PORTS */

  ElectricInputPort EP_I {
    description = "Electric input port.";
  }

  ElectricOutputPort EP_O {
    description = "Electric output port.";
  }
  
  void calculate() {

    // calculate current from voltage drop
    dV.copy( "EP_I.V" );
    dV.minus( "EP_O.V" );
    Z.setrj( R, 0. );
    I.copy( "dV" );
    I.div( "Z" );
    
    // set the conditions in the port
    EP_O.setIVRMS( I.rRMS, I.jRMS, EP_O.V.rRMS, EP_O.V.jRMS ); 
    EP_I.setIVRMS( I.rRMS, I.jRMS, EP_I.V.rRMS, EP_I.V.jRMS ); 		
    EP_O.frequency=EP_I.frequency;
  }
}
#endif